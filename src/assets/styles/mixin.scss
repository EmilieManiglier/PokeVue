// Mixin to prefix a property
// @param {Map} $declarations - Declarations to prefix
// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($map, $prefixes: webkit moz ms o) {
	@each $property,
	$value in $map {
		@if $prefixes {
			@each $prefix in $prefixes {
				#{"-" + $prefix + "-" + $property}: #{$value};
			}
		}

		// Output standard non-prefixed declaration
		#{$property}: #{$value};
	}
}

@mixin linear-gradient($direction, $start, $end) {
	background: $start; /* Old browsers */
	background: -moz-linear-gradient($direction, $start 0%, $end 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$end)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient($direction, $start 0%,$end 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient($direction, $start 0%,$end 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient($direction, $start 0%,$end 100%); /* IE10+ */
	background: linear-gradient($direction, $start 0%,$end 100%); /* W3C */
}

@mixin radial-gradient($start, $end){
	background: $start;
	background: -moz-radial-gradient(center, ellipse cover,  $start 23%, $end 99%);
	background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(23%,$start), color-stop(99%,$end));
	background: -webkit-radial-gradient(center, ellipse cover,  $start 23%,$end 99%);
	background: -o-radial-gradient(center, ellipse cover,  $start 23%,$end 99%);
	background: -ms-radial-gradient(center, ellipse cover,  $start 23%,$end 99%);
	background: radial-gradient(ellipse at center,  $start 23%,$end 99%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$start', endColorstr='$end',GradientType=1 );
}


// Flexbox display
@mixin flexbox {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

// Flex Flow Direction
// row (default) | row-reverse | column | column-reverse
@mixin flex-direction($direction: row) {
	@if $direction==row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
		-moz-box-direction: reverse;
		-moz-box-orient: horizontal;
	}

	@else if $direction==column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
		-moz-box-direction: normal;
		-moz-box-orient: vertical;
	}

	@else if $direction==column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
		-moz-box-direction: reverse;
		-moz-box-orient: vertical;
	}

	@else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
		-moz-box-direction: normal;
		-moz-box-orient: horizontal;
	}

	-webkit-flex-direction: $direction;
	-ms-flex-direction: $direction;
	flex-direction: $direction;
}

// Flex Line Wrapping
// nowrap (sdefault) | wrap | wrap-reverse
@mixin flex-wrap($value: nowrap) {
	// No Webkit/FF Box fallback.
	-webkit-flex-wrap: $value;

	@if $value==nowrap {
		-ms-flex-wrap: none;
	}

	@else {
		-ms-flex-wrap: $value;
	}

	flex-wrap: $value;
}

// Axis Alignment
// flex-start (default) | flex-end | center | space-between | space-around 
@mixin justify-content($value: flex-start) {
	@if $value==flex-start {
		-webkit-box-pack: start;
		-moz-box-pack: start;
		-ms-flex-pack: start;
	}

	@else if $value==flex-end {
		-webkit-box-pack: end;
		-moz-box-pack: end;
		-ms-flex-pack: end;
	}

	@else if $value==space-between {
		-webkit-box-pack: justify;
		-moz-box-pack: justify;
		-ms-flex-pack: justify;
	}

	@else if $value==space-around {
		-ms-flex-pack: distribute;
	}

	@else {
		-webkit-box-pack: $value;
		-moz-box-pack: $value;
		-ms-flex-pack: $value;
	}

	-webkit-justify-content: $value;
	justify-content: $value;
}

// Cross-axis Alignment
// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($value: stretch) {
	@if $value==flex-start {
		-webkit-box-align: start;
		-moz-box-align: start;
		-ms-flex-align: start;
	}

	@else if $value==flex-end {
		-webkit-box-align: end;
		-moz-box-align: end;
		-ms-flex-align: end;
	}

	@else {
		-webkit-box-align: $value;
		-moz-box-align: $value;
		-ms-flex-align: $value;
	}

	-webkit-align-items: $value;
	align-items: $value;
}
